* {
	box-sizing: border-box;
	padding: 0;
	margin: 0;
}

body {
	font-family: "Open Sans", sans-serif;
	font-size: 16px;
	line-height: 1.5;
	color: #333;
	background: #db995a;
}

.container {
	max-width: 960px;
	margin: 100px auto;
	padding: 50px;
	border: 5px solid #000;
	background: #fff;
	/* 
        display: grid => generates a block-level grid
        display: inline-grid => generates an inline-level grid
    */
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
	/* column-gap adds space between the columns
	while row-gap does the same for the rows 
	OR
	We could use "gap" for both column and row gaps
 	 */
	/* column-gap: 10px;
	row-gap: 10px; */
	gap: 10px;

	/* 
	grid-auto-rows sets the heights for the rows. 
	It also accepts a function called min-max that takes a min and max value for the height.
	 */

	/* grid-auto-rows: minmax(100px, auto); */
	/* 
	 align-items vertically manipulates the position of anything within the grid
	  */
	/* align-items: end;
	justify-content: center; */
}

.item {
	background: #654236;
	color: #fff;
	font-size: 20px;
	padding: 20px;
	/* border: skyblue 1px solid; */
}

/* .item:nth-of-type(2) {
	height: 100px;
	width: 100px;
	/* 
		align-self: manipulates the position of items in a grid container on the y-axis
		justify-self: manipulates the position of items in a grid container on the x-axis
	
	align-self: center;
	justify-self: center;
} */
.item:nth-of-type(1) {
	background: #000;
	/* grid-column-start: 1;
	grid-column-end: 3; */

	/* 
	there's a short cut to using grid-column-start & grid-column-end. Look below
	 */
	/* grid-column: 1 / 3; */
	/* OR */
	/* grid-column: 1 / span 2; */
}
.item:nth-of-type(3) {
	background: #333;
	/* grid-column-start: 1;
	grid-column-end: 3; */

	/* 
	there's a short cut to using grid-column-start & grid-column-end. 
	Same applies to grid-row-start & grid-row-end Look below
	 */
	/* grid-column: 1 / 3; */
	/* OR */
	/* grid-row: 2 / 4 ; */
}

.row-1:nth-child(even) {
	background: #db995a;
}

@media (max-width: 500px) {
	.container{
		grid-template-columns: 1fr;
	}
}
